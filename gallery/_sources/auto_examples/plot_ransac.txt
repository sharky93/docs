.. _example_plot_ransac.py:


=========================================
Robust line model estimation using RANSAC
=========================================

In this example we see how to robustly fit a line model to faulty data using
the RANSAC algorithm.


.. image:: images/plot_ransac_1.png
    :align: center


.. raw:: html
    
    <p id="controls">
        <button type="button" class="btn btn-default btn-small editcode">
            <i class="icon-edit"></i>
        </button>
    </p>

.. literalinclude:: plot_ransac.py
    :lines: 10-


.. raw:: html

    <p id="run_btn">
        <button type="button" class="btn btn-default btn-lg" id="runcode">
            <i class="icon-play"></i> Run
        </button>
        <button type="button" class="btn btn-default btn-lg" id="reload">
            <i class="icon-refresh"></i>
        </button>
        <img id="loading" src="../_static/ajax-loader.gif"/>
    </p>

.. raw:: html

    <p>
        <div class="alert alert-success" id="success-message"></div>
        <div class="alert alert-error" id="error-message"></div>
        <div class="all-output">
            <p class="stdout-group">
                <i class="icon-info-sign"></i> <u>STDOUT</u>
            </p>
            <pre id="stdout"></pre>
            <hr class="stdout-group">
            <p class="stderr-group">
                <i class="icon-remove-sign"></i> <u>STDERR</u>
            </p>
            <pre id="stderr"></pre>
            <hr class="stderr-group">
        </div>
    </p>


**Python source code:** :download:`download <plot_ransac.py>`
(generated using ``skimage`` |version|)



**IPython Notebook:** :download:`download <./notebook/plot_ransac.ipynb>`
(generated using ``skimage`` |version|)


.. raw:: html

    <div class="tobehidden">aW1wb3J0IG51bXB5IGFzIG5wCmZyb20gbWF0cGxvdGxpYiBpbXBvcnQgcHlwbG90IGFzIHBsdAoKZnJvbSBza2ltYWdlLm1lYXN1cmUgaW1wb3J0IExpbmVNb2RlbCwgcmFuc2FjCgoKbnAucmFuZG9tLnNlZWQoc2VlZD0xKQoKIyBnZW5lcmF0ZSBjb29yZGluYXRlcyBvZiBsaW5lCnggPSBucC5hcmFuZ2UoLTIwMCwgMjAwKQp5ID0gMC4yICogeCArIDIwCmRhdGEgPSBucC5jb2x1bW5fc3RhY2soW3gsIHldKQoKIyBhZGQgZmF1bHR5IGRhdGEKZmF1bHR5ID0gbnAuYXJyYXkoMzAgKiBbKDE4MC4sIC0xMDApXSkKZmF1bHR5ICs9IDUgKiBucC5yYW5kb20ubm9ybWFsKHNpemU9ZmF1bHR5LnNoYXBlKQpkYXRhWzpmYXVsdHkuc2hhcGVbMF1dID0gZmF1bHR5CgojIGFkZCBnYXVzc2lhbiBub2lzZSB0byBjb29yZGluYXRlcwpub2lzZSA9IG5wLnJhbmRvbS5ub3JtYWwoc2l6ZT1kYXRhLnNoYXBlKQpkYXRhICs9IDAuNSAqIG5vaXNlCmRhdGFbOjoyXSArPSA1ICogbm9pc2VbOjoyXQpkYXRhWzo6NF0gKz0gMjAgKiBub2lzZVs6OjRdCgojIGZpdCBsaW5lIHVzaW5nIGFsbCBkYXRhCm1vZGVsID0gTGluZU1vZGVsKCkKbW9kZWwuZXN0aW1hdGUoZGF0YSkKCiMgcm9idXN0bHkgZml0IGxpbmUgb25seSB1c2luZyBpbmxpZXIgZGF0YSB3aXRoIFJBTlNBQyBhbGdvcml0aG0KbW9kZWxfcm9idXN0LCBpbmxpZXJzID0gcmFuc2FjKGRhdGEsIExpbmVNb2RlbCwgbWluX3NhbXBsZXM9MiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc2lkdWFsX3RocmVzaG9sZD0xLCBtYXhfdHJpYWxzPTEwMDApCm91dGxpZXJzID0gaW5saWVycyA9PSBGYWxzZQoKIyBnZW5lcmF0ZSBjb29yZGluYXRlcyBvZiBlc3RpbWF0ZWQgbW9kZWxzCmxpbmVfeCA9IG5wLmFyYW5nZSgtMjUwLCAyNTApCmxpbmVfeSA9IG1vZGVsLnByZWRpY3RfeShsaW5lX3gpCmxpbmVfeV9yb2J1c3QgPSBtb2RlbF9yb2J1c3QucHJlZGljdF95KGxpbmVfeCkKCmZpZywgYXggPSBwbHQuc3VicGxvdHMoKQpheC5wbG90KGRhdGFbaW5saWVycywgMF0sIGRhdGFbaW5saWVycywgMV0sICcuYicsIGFscGhhPTAuNiwKICAgICAgICBsYWJlbD0nSW5saWVyIGRhdGEnKQpheC5wbG90KGRhdGFbb3V0bGllcnMsIDBdLCBkYXRhW291dGxpZXJzLCAxXSwgJy5yJywgYWxwaGE9MC42LAogICAgICAgIGxhYmVsPSdPdXRsaWVyIGRhdGEnKQpheC5wbG90KGxpbmVfeCwgbGluZV95LCAnLWsnLCBsYWJlbD0nTGluZSBtb2RlbCBmcm9tIGFsbCBkYXRhJykKYXgucGxvdChsaW5lX3gsIGxpbmVfeV9yb2J1c3QsICctYicsIGxhYmVsPSdSb2J1c3QgbGluZSBtb2RlbCcpCmF4LmxlZ2VuZChsb2M9J2xvd2VyIGxlZnQnKQpwbHQuc2hvdygp</div>
