.. _example_plot_threshold_adaptive.py:


=====================
Adaptive Thresholding
=====================

Thresholding is the simplest way to segment objects from a background. If that
background is relatively uniform, then you can use a global threshold value to
binarize the image by pixel-intensity. If there's large variation in the
background intensity, however, adaptive thresholding (a.k.a. local or dynamic
thresholding) may produce better results.

Here, we binarize an image using the `threshold_adaptive` function, which
calculates thresholds in regions of size `block_size` surrounding each pixel
(i.e. local neighborhoods). Each threshold value is the weighted mean of the
local neighborhood minus an offset value.


.. image:: images/plot_threshold_adaptive_1.png
    :align: center


.. raw:: html
    
    <p id="controls">
        <button type="button" class="btn btn-default btn-small editcode">
            <i class="icon-edit"></i>
        </button>
    </p>

.. literalinclude:: plot_threshold_adaptive.py
    :lines: 18-


.. raw:: html

    <p class="run_btn">
        <button type="button" class="btn btn-default btn-lg runcode">
            <i class="icon-play"></i> Run
        </button>
        <img class="loading" src="../_static/ajax-loader.gif"/>
    </p>

.. raw:: html

    <p id="revert_btn">
        <button type="button" class="btn btn-default btn-lg" id="reload">
            <i class="icon-refresh"></i>
        </button>
    </p>

.. raw:: html

    <p>
        <div class="alert alert-success" id="success-message"></div>
        <div class="alert alert-error" id="error-message"></div>
        <div class="all-output">
            <p class="stdout-group">
                <i class="icon-info-sign"></i> <u>STDOUT</u>
            </p>
            <pre id="stdout"></pre>
            <hr class="stdout-group">
            <p class="stderr-group">
                <i class="icon-remove-sign"></i> <u>STDERR</u>
            </p>
            <pre id="stderr"></pre>
            <hr class="stderr-group">
        </div>
    </p>


**Python source code:** :download:`download <plot_threshold_adaptive.py>`
(generated using ``skimage`` |version|)



**IPython Notebook:** :download:`download <./notebook/plot_threshold_adaptive.ipynb>`
(generated using ``skimage`` |version|)


.. raw:: html

    <div class="tobehidden">aW1wb3J0IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdAoKZnJvbSBza2ltYWdlIGltcG9ydCBkYXRhCmZyb20gc2tpbWFnZS5maWx0ZXIgaW1wb3J0IHRocmVzaG9sZF9vdHN1LCB0aHJlc2hvbGRfYWRhcHRpdmUKCgppbWFnZSA9IGRhdGEucGFnZSgpCgpnbG9iYWxfdGhyZXNoID0gdGhyZXNob2xkX290c3UoaW1hZ2UpCmJpbmFyeV9nbG9iYWwgPSBpbWFnZSA+IGdsb2JhbF90aHJlc2gKCmJsb2NrX3NpemUgPSA0MApiaW5hcnlfYWRhcHRpdmUgPSB0aHJlc2hvbGRfYWRhcHRpdmUoaW1hZ2UsIGJsb2NrX3NpemUsIG9mZnNldD0xMCkKCmZpZywgYXhlcyA9IHBsdC5zdWJwbG90cyhucm93cz0zLCBmaWdzaXplPSg3LCA4KSkKYXgwLCBheDEsIGF4MiA9IGF4ZXMKcGx0LmdyYXkoKQoKYXgwLmltc2hvdyhpbWFnZSkKYXgwLnNldF90aXRsZSgnSW1hZ2UnKQoKYXgxLmltc2hvdyhiaW5hcnlfZ2xvYmFsKQpheDEuc2V0X3RpdGxlKCdHbG9iYWwgdGhyZXNob2xkaW5nJykKCmF4Mi5pbXNob3coYmluYXJ5X2FkYXB0aXZlKQpheDIuc2V0X3RpdGxlKCdBZGFwdGl2ZSB0aHJlc2hvbGRpbmcnKQoKZm9yIGF4IGluIGF4ZXM6CiAgICBheC5heGlzKCdvZmYnKQoKcGx0LnNob3coKQ==</div>
