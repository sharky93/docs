.. _example_plot_join_segmentations.py:


==========================================
Find the intersection of two segmentations
==========================================

When segmenting an image, you may want to combine multiple alternative
segmentations. The `skimage.segmentation.join_segmentations` function
computes the join of two segmentations, in which a pixel is placed in
the same segment if and only if it is in the same segment in _both_
segmentations.


.. image:: images/plot_join_segmentations_1.png
    :align: center


.. raw:: html
    
    <p id="controls">
        <button type="button" class="btn btn-default btn-small editcode">
            <i class="icon-edit"></i>
        </button>
    </p>

.. literalinclude:: plot_join_segmentations.py
    :lines: 13-


.. raw:: html

    <p class="run_btn">
        <button type="button" class="btn btn-default btn-lg runcode">
            <i class="icon-play"></i> Run
        </button>
        <img class="loading" src="../_static/ajax-loader.gif"/>
    </p>

.. raw:: html

    <p id="revert_btn">
        <button type="button" class="btn btn-default btn-lg" id="reload">
            <i class="icon-refresh"></i>
        </button>
    </p>

.. raw:: html

    <p>
        <div class="alert alert-success" id="success-message"></div>
        <div class="alert alert-error" id="error-message"></div>
        <div class="all-output">
            <p class="stdout-group">
                <i class="icon-info-sign"></i> <u>STDOUT</u>
            </p>
            <pre id="stdout"></pre>
            <hr class="stdout-group">
            <p class="stderr-group">
                <i class="icon-remove-sign"></i> <u>STDERR</u>
            </p>
            <pre id="stderr"></pre>
            <hr class="stderr-group">
        </div>
    </p>


**Python source code:** :download:`download <plot_join_segmentations.py>`
(generated using ``skimage`` |version|)



**IPython Notebook:** :download:`download <./notebook/plot_join_segmentations.ipynb>`
(generated using ``skimage`` |version|)


.. raw:: html

    <div class="tobehidden">aW1wb3J0IG51bXB5IGFzIG5wCmZyb20gc2NpcHkgaW1wb3J0IG5kaW1hZ2UgYXMgbmQKaW1wb3J0IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdAoKZnJvbSBza2ltYWdlLmZpbHRlciBpbXBvcnQgc29iZWwKZnJvbSBza2ltYWdlLnNlZ21lbnRhdGlvbiBpbXBvcnQgc2xpYywgam9pbl9zZWdtZW50YXRpb25zCmZyb20gc2tpbWFnZS5tb3JwaG9sb2d5IGltcG9ydCB3YXRlcnNoZWQKZnJvbSBza2ltYWdlLmNvbG9yIGltcG9ydCBsYWJlbDJyZ2IKZnJvbSBza2ltYWdlIGltcG9ydCBkYXRhLCBpbWdfYXNfZmxvYXQKCmNvaW5zID0gaW1nX2FzX2Zsb2F0KGRhdGEuY29pbnMoKSkKCiMgbWFrZSBzZWdtZW50YXRpb24gdXNpbmcgZWRnZS1kZXRlY3Rpb24gYW5kIHdhdGVyc2hlZAplZGdlcyA9IHNvYmVsKGNvaW5zKQptYXJrZXJzID0gbnAuemVyb3NfbGlrZShjb2lucykKZm9yZWdyb3VuZCwgYmFja2dyb3VuZCA9IDEsIDIKbWFya2Vyc1tjb2lucyA8IDMwLjAgLyAyNTVdID0gYmFja2dyb3VuZAptYXJrZXJzW2NvaW5zID4gMTUwLjAgLyAyNTVdID0gZm9yZWdyb3VuZAoKd3MgPSB3YXRlcnNoZWQoZWRnZXMsIG1hcmtlcnMpCnNlZzEgPSBuZC5sYWJlbCh3cyA9PSBmb3JlZ3JvdW5kKVswXQoKIyBtYWtlIHNlZ21lbnRhdGlvbiB1c2luZyBTTElDIHN1cGVycGl4ZWxzCnNlZzIgPSBzbGljKGNvaW5zLCBuX3NlZ21lbnRzPTExNywgbWF4X2l0ZXI9MTYwLCBzaWdtYT0xLCBjb21wYWN0bmVzcz0wLjc1LAogICAgICAgICAgICBtdWx0aWNoYW5uZWw9RmFsc2UpCgojIGNvbWJpbmUgdGhlIHR3bwpzZWdqID0gam9pbl9zZWdtZW50YXRpb25zKHNlZzEsIHNlZzIpCgojIHNob3cgdGhlIHNlZ21lbnRhdGlvbnMKZmlnLCBheGVzID0gcGx0LnN1YnBsb3RzKG5jb2xzPTQsIGZpZ3NpemU9KDksIDIuNSkpCmF4ZXNbMF0uaW1zaG93KGNvaW5zLCBjbWFwPXBsdC5jbS5ncmF5LCBpbnRlcnBvbGF0aW9uPSduZWFyZXN0JykKYXhlc1swXS5zZXRfdGl0bGUoJ0ltYWdlJykKCmNvbG9yMSA9IGxhYmVsMnJnYihzZWcxLCBpbWFnZT1jb2lucywgYmdfbGFiZWw9MCkKYXhlc1sxXS5pbXNob3coY29sb3IxLCBpbnRlcnBvbGF0aW9uPSduZWFyZXN0JykKYXhlc1sxXS5zZXRfdGl0bGUoJ1NvYmVsK1dhdGVyc2hlZCcpCgpjb2xvcjIgPSBsYWJlbDJyZ2Ioc2VnMiwgaW1hZ2U9Y29pbnMsIGltYWdlX2FscGhhPTAuNSkKYXhlc1syXS5pbXNob3coY29sb3IyLCBpbnRlcnBvbGF0aW9uPSduZWFyZXN0JykKYXhlc1syXS5zZXRfdGl0bGUoJ1NMSUMgc3VwZXJwaXhlbHMnKQoKY29sb3IzID0gbGFiZWwycmdiKHNlZ2osIGltYWdlPWNvaW5zLCBpbWFnZV9hbHBoYT0wLjUpCmF4ZXNbM10uaW1zaG93KGNvbG9yMywgaW50ZXJwb2xhdGlvbj0nbmVhcmVzdCcpCmF4ZXNbM10uc2V0X3RpdGxlKCdKb2luJykKCmZvciBheCBpbiBheGVzOgogICAgYXguYXhpcygnb2ZmJykKZmlnLnN1YnBsb3RzX2FkanVzdChoc3BhY2U9MC4wMSwgd3NwYWNlPTAuMDEsIHRvcD0xLCBib3R0b209MCwgbGVmdD0wLCByaWdodD0xKQpwbHQuc2hvdygp</div>
