.. _example_plot_marked_watershed.py:


===============================
Markers for watershed transform
===============================

The watershed is a classical algorithm used for **segmentation**, that
is, for separating different objects in an image.

Here a marker image is build from the region of low gradient inside the image.

See Wikipedia_ for more details on the algorithm.

.. _Wikipedia: http://en.wikipedia.org/wiki/Watershed_(image_processing)


.. image:: images/plot_marked_watershed_1.png
    :align: center


.. raw:: html
    
    <p id="controls">
        <button type="button" class="btn btn-default btn-small" id="editcode">
            <i class="icon-edit"></i>
        </button>
    </p>

.. literalinclude:: plot_marked_watershed.py
    :lines: 16-


.. raw:: html

    <p id="run_btn">
        <button type="button" class="btn btn-default btn-lg" id="runcode">
            <i class="icon-play"></i> Run
        </button>
        <button type="button" class="btn btn-default btn-lg" id="reload">
            <i class="icon-refresh"></i>
        </button>
        <img id="loading" src="../_static/ajax-loader.gif"/>
    </p>

.. raw:: html

    <p>
        <div class="alert alert-success" id="success-message"></div>
        <div class="alert alert-error" id="error-message"></div>
        <div class="all-output">
            <p class="stdout-group">
                <i class="icon-info-sign"></i> <u>STDOUT</u>
            </p>
            <pre id="stdout"></pre>
            <hr class="stdout-group">
            <p class="stderr-group">
                <i class="icon-remove-sign"></i> <u>STDERR</u>
            </p>
            <pre id="stderr"></pre>
            <hr class="stderr-group">
        </div>
    </p>


**Python source code:** :download:`download <plot_marked_watershed.py>`
(generated using ``skimage`` |version|)



**IPython Notebook:** :download:`download <./notebook/plot_marked_watershed.ipynb>`
(generated using ``skimage`` |version|)


.. raw:: html

    <div class="tobehidden">CmZyb20gc2NpcHkgaW1wb3J0IG5kaW1hZ2UKaW1wb3J0IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdAoKZnJvbSBza2ltYWdlLm1vcnBob2xvZ3kgaW1wb3J0IHdhdGVyc2hlZCwgZGlzawpmcm9tIHNraW1hZ2UgaW1wb3J0IGRhdGEKZnJvbSBza2ltYWdlLmZpbHRlciBpbXBvcnQgcmFuawpmcm9tIHNraW1hZ2UudXRpbCBpbXBvcnQgaW1nX2FzX3VieXRlCgoKaW1hZ2UgPSBpbWdfYXNfdWJ5dGUoZGF0YS5jYW1lcmEoKSkKCiMgZGVub2lzZSBpbWFnZQpkZW5vaXNlZCA9IHJhbmsubWVkaWFuKGltYWdlLCBkaXNrKDIpKQoKIyBmaW5kIGNvbnRpbnVvdXMgcmVnaW9uIChsb3cgZ3JhZGllbnQpIC0tPiBtYXJrZXJzCm1hcmtlcnMgPSByYW5rLmdyYWRpZW50KGRlbm9pc2VkLCBkaXNrKDUpKSA8IDEwCm1hcmtlcnMgPSBuZGltYWdlLmxhYmVsKG1hcmtlcnMpWzBdCgojbG9jYWwgZ3JhZGllbnQKZ3JhZGllbnQgPSByYW5rLmdyYWRpZW50KGRlbm9pc2VkLCBkaXNrKDIpKQoKIyBwcm9jZXNzIHRoZSB3YXRlcnNoZWQKbGFiZWxzID0gd2F0ZXJzaGVkKGdyYWRpZW50LCBtYXJrZXJzKQoKIyBkaXNwbGF5IHJlc3VsdHMKZmlnLCBheGVzID0gcGx0LnN1YnBsb3RzKG5jb2xzPTQsIGZpZ3NpemU9KDgsIDIuNykpCmF4MCwgYXgxLCBheDIsIGF4MyA9IGF4ZXMKCmF4MC5pbXNob3coaW1hZ2UsIGNtYXA9cGx0LmNtLmdyYXksIGludGVycG9sYXRpb249J25lYXJlc3QnKQpheDEuaW1zaG93KGdyYWRpZW50LCBjbWFwPXBsdC5jbS5zcGVjdHJhbCwgaW50ZXJwb2xhdGlvbj0nbmVhcmVzdCcpCmF4Mi5pbXNob3cobWFya2VycywgY21hcD1wbHQuY20uc3BlY3RyYWwsIGludGVycG9sYXRpb249J25lYXJlc3QnKQpheDMuaW1zaG93KGltYWdlLCBjbWFwPXBsdC5jbS5ncmF5LCBpbnRlcnBvbGF0aW9uPSduZWFyZXN0JykKYXgzLmltc2hvdyhsYWJlbHMsIGNtYXA9cGx0LmNtLnNwZWN0cmFsLCBpbnRlcnBvbGF0aW9uPSduZWFyZXN0JywgYWxwaGE9LjcpCgpmb3IgYXggaW4gYXhlczoKICAgIGF4LmF4aXMoJ29mZicpCgpmaWcuc3VicGxvdHNfYWRqdXN0KGhzcGFjZT0wLjAxLCB3c3BhY2U9MC4wMSwgdG9wPTEsIGJvdHRvbT0wLCBsZWZ0PTAsIHJpZ2h0PTEpCnBsdC5zaG93KCk=</div>
