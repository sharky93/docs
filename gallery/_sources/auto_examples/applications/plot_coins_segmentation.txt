.. _example_applications_plot_coins_segmentation.py:


===============================================================
Comparing edge-based segmentation and region-based segmentation
===============================================================

In this example, we will see how to segment objects from a background. We use
the ``coins`` image from ``skimage.data``, which shows several coins outlined
against a darker background.


.. code-block:: python

	
	import numpy as np
	import matplotlib.pyplot as plt
	
	from skimage import data
	
	coins = data.coins()
	hist = np.histogram(coins, bins=np.arange(0, 256))
	
	fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(8, 3))
	ax1.imshow(coins, cmap=plt.cm.gray, interpolation='nearest')
	ax1.axis('off')
	ax2.plot(hist[1][:-1], hist[0], lw=2)
	ax2.set_title('histogram of grey values')
	
	

.. image:: images/plot_coins_segmentation_1.png

Thresholding
============

A simple way to segment the coins is to choose a threshold based on the
histogram of grey values. Unfortunately, thresholding this image gives a binary
image that either misses significant parts of the coins or merges parts of the
background with the coins:



.. code-block:: python

	
	fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(6, 3))
	ax1.imshow(coins > 100, cmap=plt.cm.gray, interpolation='nearest')
	ax1.set_title('coins > 100')
	ax1.axis('off')
	ax2.imshow(coins > 150, cmap=plt.cm.gray, interpolation='nearest')
	ax2.set_title('coins > 150')
	ax2.axis('off')
	margins = dict(hspace=0.01, wspace=0.01, top=1, bottom=0, left=0, right=1)
	fig.subplots_adjust(**margins)
	
	

.. image:: images/plot_coins_segmentation_2.png


Edge-based segmentation
=======================

Next, we try to delineate the contours of the coins using edge-based
segmentation. To do this, we first get the edges of features using the Canny
edge-detector.


.. code-block:: python

	
	from skimage.filter import canny
	edges = canny(coins/255.)
	
	fig, ax = plt.subplots(figsize=(4, 3))
	ax.imshow(edges, cmap=plt.cm.gray, interpolation='nearest')
	ax.axis('off')
	ax.set_title('Canny detector')
	
	

.. image:: images/plot_coins_segmentation_3.png

These contours are then filled using mathematical morphology.


.. code-block:: python

	
	from scipy import ndimage
	
	fill_coins = ndimage.binary_fill_holes(edges)
	
	fig, ax = plt.subplots(figsize=(4, 3))
	ax.imshow(fill_coins, cmap=plt.cm.gray, interpolation='nearest')
	ax.axis('off')
	ax.set_title('Filling the holes')
	
	

.. image:: images/plot_coins_segmentation_4.png

Small spurious objects are easily removed by setting a minimum size for valid
objects.


.. code-block:: python

	from skimage import morphology
	coins_cleaned = morphology.remove_small_objects(fill_coins, 21)
	
	fig, ax = plt.subplots(figsize=(4, 3))
	ax.imshow(coins_cleaned, cmap=plt.cm.gray, interpolation='nearest')
	ax.axis('off')
	ax.set_title('Removing small objects')
	
	

.. image:: images/plot_coins_segmentation_5.png

However, this method is not very robust, since contours that are not perfectly
closed are not filled correctly, as is the case for one unfilled coin above.


Region-based segmentation
=========================

We therefore try a region-based method using the watershed transform. First, we
find an elevation map using the Sobel gradient of the image.



.. code-block:: python

	
	from skimage.filter import sobel
	
	elevation_map = sobel(coins)
	
	fig, ax = plt.subplots(figsize=(4, 3))
	ax.imshow(elevation_map, cmap=plt.cm.jet, interpolation='nearest')
	ax.axis('off')
	ax.set_title('elevation_map')
	
	

.. image:: images/plot_coins_segmentation_6.png

Next we find markers of the background and the coins based on the extreme parts
of the histogram of grey values.


.. code-block:: python

	
	markers = np.zeros_like(coins)
	markers[coins < 30] = 1
	markers[coins > 150] = 2
	
	fig, ax = plt.subplots(figsize=(4, 3))
	ax.imshow(markers, cmap=plt.cm.spectral, interpolation='nearest')
	ax.axis('off')
	ax.set_title('markers')
	
	

.. image:: images/plot_coins_segmentation_7.png

Finally, we use the watershed transform to fill regions of the elevation map
starting from the markers determined above:



.. code-block:: python

	segmentation = morphology.watershed(elevation_map, markers)
	
	fig, ax = plt.subplots(figsize=(4, 3))
	ax.imshow(segmentation, cmap=plt.cm.gray, interpolation='nearest')
	ax.axis('off')
	ax.set_title('segmentation')
	
	

.. image:: images/plot_coins_segmentation_8.png

This last method works even better, and the coins can be segmented and labeled
individually.



.. code-block:: python

	
	from skimage.color import label2rgb
	
	segmentation = ndimage.binary_fill_holes(segmentation - 1)
	labeled_coins, _ = ndimage.label(segmentation)
	image_label_overlay = label2rgb(labeled_coins, image=coins)
	
	fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(6, 3))
	ax1.imshow(coins, cmap=plt.cm.gray, interpolation='nearest')
	ax1.contour(segmentation, [0.5], linewidths=1.2, colors='y')
	ax1.axis('off')
	ax2.imshow(image_label_overlay, interpolation='nearest')
	ax2.axis('off')
	
	fig.subplots_adjust(**margins)
	
	

.. image:: images/plot_coins_segmentation_9.png



.. code-block:: python

	
	plt.show()
	
.. raw:: html

    <p id="run_btn">
        <button type="button" class="btn btn-default btn-lg" id="runcode">
            <i class="icon-play"></i> Run
        </button>
        <button type="button" class="btn btn-default btn-lg" id="reload">
            <i class="icon-refresh"></i>
        </button>
        <img id="loading" src="../_static/ajax-loader.gif"/>
    </p>

.. raw:: html

    <p>
        <div class="alert alert-success" id="success-message"></div>
        <div class="alert alert-error" id="error-message"></div>
        <div class="all-output">
            <p class="stdout-group">
                <i class="icon-info-sign"></i> <u>STDOUT</u>
            </p>
            <pre id="stdout"></pre>
            <hr class="stdout-group">
            <p class="stderr-group">
                <i class="icon-remove-sign"></i> <u>STDERR</u>
            </p>
            <pre id="stderr"></pre>
            <hr class="stderr-group">
        </div>
    </p>


**Python source code:** :download:`download <plot_coins_segmentation.py>`
(generated using ``skimage`` |version|)



**IPython Notebook:** :download:`download <./notebook/plot_coins_segmentation.ipynb>`
(generated using ``skimage`` |version|)


.. raw:: html

    <div class="tobehidden">CmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgbWF0cGxvdGxpYi5weXBsb3QgYXMgcGx0Cgpmcm9tIHNraW1hZ2UgaW1wb3J0IGRhdGEKCmNvaW5zID0gZGF0YS5jb2lucygpCmhpc3QgPSBucC5oaXN0b2dyYW0oY29pbnMsIGJpbnM9bnAuYXJhbmdlKDAsIDI1NikpCgpmaWcsIChheDEsIGF4MikgPSBwbHQuc3VicGxvdHMoMSwgMiwgZmlnc2l6ZT0oOCwgMykpCmF4MS5pbXNob3coY29pbnMsIGNtYXA9cGx0LmNtLmdyYXksIGludGVycG9sYXRpb249J25lYXJlc3QnKQpheDEuYXhpcygnb2ZmJykKYXgyLnBsb3QoaGlzdFsxXVs6LTFdLCBoaXN0WzBdLCBsdz0yKQpheDIuc2V0X3RpdGxlKCdoaXN0b2dyYW0gb2YgZ3JleSB2YWx1ZXMnKQ==</div>

.. raw:: html

    <div class="tobehidden">CmZpZywgKGF4MSwgYXgyKSA9IHBsdC5zdWJwbG90cygxLCAyLCBmaWdzaXplPSg2LCAzKSkKYXgxLmltc2hvdyhjb2lucyA+IDEwMCwgY21hcD1wbHQuY20uZ3JheSwgaW50ZXJwb2xhdGlvbj0nbmVhcmVzdCcpCmF4MS5zZXRfdGl0bGUoJ2NvaW5zID4gMTAwJykKYXgxLmF4aXMoJ29mZicpCmF4Mi5pbXNob3coY29pbnMgPiAxNTAsIGNtYXA9cGx0LmNtLmdyYXksIGludGVycG9sYXRpb249J25lYXJlc3QnKQpheDIuc2V0X3RpdGxlKCdjb2lucyA+IDE1MCcpCmF4Mi5heGlzKCdvZmYnKQptYXJnaW5zID0gZGljdChoc3BhY2U9MC4wMSwgd3NwYWNlPTAuMDEsIHRvcD0xLCBib3R0b209MCwgbGVmdD0wLCByaWdodD0xKQpmaWcuc3VicGxvdHNfYWRqdXN0KCoqbWFyZ2lucyk=</div>

.. raw:: html

    <div class="tobehidden">CmZyb20gc2tpbWFnZS5maWx0ZXIgaW1wb3J0IGNhbm55CmVkZ2VzID0gY2FubnkoY29pbnMvMjU1LikKCmZpZywgYXggPSBwbHQuc3VicGxvdHMoZmlnc2l6ZT0oNCwgMykpCmF4Lmltc2hvdyhlZGdlcywgY21hcD1wbHQuY20uZ3JheSwgaW50ZXJwb2xhdGlvbj0nbmVhcmVzdCcpCmF4LmF4aXMoJ29mZicpCmF4LnNldF90aXRsZSgnQ2FubnkgZGV0ZWN0b3InKQ==</div>

.. raw:: html

    <div class="tobehidden">CmZyb20gc2NpcHkgaW1wb3J0IG5kaW1hZ2UKCmZpbGxfY29pbnMgPSBuZGltYWdlLmJpbmFyeV9maWxsX2hvbGVzKGVkZ2VzKQoKZmlnLCBheCA9IHBsdC5zdWJwbG90cyhmaWdzaXplPSg0LCAzKSkKYXguaW1zaG93KGZpbGxfY29pbnMsIGNtYXA9cGx0LmNtLmdyYXksIGludGVycG9sYXRpb249J25lYXJlc3QnKQpheC5heGlzKCdvZmYnKQpheC5zZXRfdGl0bGUoJ0ZpbGxpbmcgdGhlIGhvbGVzJyk=</div>

.. raw:: html

    <div class="tobehidden">ZnJvbSBza2ltYWdlIGltcG9ydCBtb3JwaG9sb2d5CmNvaW5zX2NsZWFuZWQgPSBtb3JwaG9sb2d5LnJlbW92ZV9zbWFsbF9vYmplY3RzKGZpbGxfY29pbnMsIDIxKQoKZmlnLCBheCA9IHBsdC5zdWJwbG90cyhmaWdzaXplPSg0LCAzKSkKYXguaW1zaG93KGNvaW5zX2NsZWFuZWQsIGNtYXA9cGx0LmNtLmdyYXksIGludGVycG9sYXRpb249J25lYXJlc3QnKQpheC5heGlzKCdvZmYnKQpheC5zZXRfdGl0bGUoJ1JlbW92aW5nIHNtYWxsIG9iamVjdHMnKQ==</div>

.. raw:: html

    <div class="tobehidden">CmZyb20gc2tpbWFnZS5maWx0ZXIgaW1wb3J0IHNvYmVsCgplbGV2YXRpb25fbWFwID0gc29iZWwoY29pbnMpCgpmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKGZpZ3NpemU9KDQsIDMpKQpheC5pbXNob3coZWxldmF0aW9uX21hcCwgY21hcD1wbHQuY20uamV0LCBpbnRlcnBvbGF0aW9uPSduZWFyZXN0JykKYXguYXhpcygnb2ZmJykKYXguc2V0X3RpdGxlKCdlbGV2YXRpb25fbWFwJyk=</div>

.. raw:: html

    <div class="tobehidden">Cm1hcmtlcnMgPSBucC56ZXJvc19saWtlKGNvaW5zKQptYXJrZXJzW2NvaW5zIDwgMzBdID0gMQptYXJrZXJzW2NvaW5zID4gMTUwXSA9IDIKCmZpZywgYXggPSBwbHQuc3VicGxvdHMoZmlnc2l6ZT0oNCwgMykpCmF4Lmltc2hvdyhtYXJrZXJzLCBjbWFwPXBsdC5jbS5zcGVjdHJhbCwgaW50ZXJwb2xhdGlvbj0nbmVhcmVzdCcpCmF4LmF4aXMoJ29mZicpCmF4LnNldF90aXRsZSgnbWFya2Vycycp</div>

.. raw:: html

    <div class="tobehidden">c2VnbWVudGF0aW9uID0gbW9ycGhvbG9neS53YXRlcnNoZWQoZWxldmF0aW9uX21hcCwgbWFya2VycykKCmZpZywgYXggPSBwbHQuc3VicGxvdHMoZmlnc2l6ZT0oNCwgMykpCmF4Lmltc2hvdyhzZWdtZW50YXRpb24sIGNtYXA9cGx0LmNtLmdyYXksIGludGVycG9sYXRpb249J25lYXJlc3QnKQpheC5heGlzKCdvZmYnKQpheC5zZXRfdGl0bGUoJ3NlZ21lbnRhdGlvbicp</div>

.. raw:: html

    <div class="tobehidden">CmZyb20gc2tpbWFnZS5jb2xvciBpbXBvcnQgbGFiZWwycmdiCgpzZWdtZW50YXRpb24gPSBuZGltYWdlLmJpbmFyeV9maWxsX2hvbGVzKHNlZ21lbnRhdGlvbiAtIDEpCmxhYmVsZWRfY29pbnMsIF8gPSBuZGltYWdlLmxhYmVsKHNlZ21lbnRhdGlvbikKaW1hZ2VfbGFiZWxfb3ZlcmxheSA9IGxhYmVsMnJnYihsYWJlbGVkX2NvaW5zLCBpbWFnZT1jb2lucykKCmZpZywgKGF4MSwgYXgyKSA9IHBsdC5zdWJwbG90cygxLCAyLCBmaWdzaXplPSg2LCAzKSkKYXgxLmltc2hvdyhjb2lucywgY21hcD1wbHQuY20uZ3JheSwgaW50ZXJwb2xhdGlvbj0nbmVhcmVzdCcpCmF4MS5jb250b3VyKHNlZ21lbnRhdGlvbiwgWzAuNV0sIGxpbmV3aWR0aHM9MS4yLCBjb2xvcnM9J3knKQpheDEuYXhpcygnb2ZmJykKYXgyLmltc2hvdyhpbWFnZV9sYWJlbF9vdmVybGF5LCBpbnRlcnBvbGF0aW9uPSduZWFyZXN0JykKYXgyLmF4aXMoJ29mZicpCgpmaWcuc3VicGxvdHNfYWRqdXN0KCoqbWFyZ2lucyk=</div>

.. raw:: html

    <div class="tobehidden">CnBsdC5zaG93KCk=</div>
