.. _example_plot_polygon.py:


==================================
Approximate and subdivide polygons
==================================

This example shows how to approximate (Douglas-Peucker algorithm) and subdivide
(B-Splines) polygonal chains.


.. image:: images/plot_polygon_1.png
    :align: center


.. raw:: html
    
    <p id="controls">
        <button type="button" class="btn btn-default btn-small editcode">
            <i class="icon-edit"></i>
        </button>
    </p>

.. literalinclude:: plot_polygon.py
    :lines: 10-


.. raw:: html

    <p id="run_btn">
        <button type="button" class="btn btn-default btn-lg" id="runcode">
            <i class="icon-play"></i> Run
        </button>
        <button type="button" class="btn btn-default btn-lg" id="reload">
            <i class="icon-refresh"></i>
        </button>
        <img id="loading" src="../_static/ajax-loader.gif"/>
    </p>

.. raw:: html

    <p>
        <div class="alert alert-success" id="success-message"></div>
        <div class="alert alert-error" id="error-message"></div>
        <div class="all-output">
            <p class="stdout-group">
                <i class="icon-info-sign"></i> <u>STDOUT</u>
            </p>
            <pre id="stdout"></pre>
            <hr class="stdout-group">
            <p class="stderr-group">
                <i class="icon-remove-sign"></i> <u>STDERR</u>
            </p>
            <pre id="stderr"></pre>
            <hr class="stderr-group">
        </div>
    </p>


**Python source code:** :download:`download <plot_polygon.py>`
(generated using ``skimage`` |version|)



**IPython Notebook:** :download:`download <./notebook/plot_polygon.ipynb>`
(generated using ``skimage`` |version|)


.. raw:: html

    <div class="tobehidden">ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBwcmludF9mdW5jdGlvbgoKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKCmZyb20gc2tpbWFnZS5kcmF3IGltcG9ydCBlbGxpcHNlCmZyb20gc2tpbWFnZS5tZWFzdXJlIGltcG9ydCBmaW5kX2NvbnRvdXJzLCBhcHByb3hpbWF0ZV9wb2x5Z29uLCBcCiAgICBzdWJkaXZpZGVfcG9seWdvbgoKCmhhbmQgPSBucC5hcnJheShbWzEuNjQ1MTYxMjksIDEuMTYxNDU4MzNdLAogICAgICAgICAgICAgICAgIFsxLjY0NTE2MTI5LCAxLjU5Mzc1ICAgXSwKICAgICAgICAgICAgICAgICBbMS4zNTA4MDY0NSwgMS45MjE4NzUgIF0sCiAgICAgICAgICAgICAgICAgWzEuMzc1ICAgICAsIDIuMTgyMjkxNjddLAogICAgICAgICAgICAgICAgIFsxLjY4NTQ4Mzg3LCAxLjkzNzUgICAgXSwKICAgICAgICAgICAgICAgICBbMS42MDg4NzA5NywgMi41NTIwODMzM10sCiAgICAgICAgICAgICAgICAgWzEuNjg1NDgzODcsIDIuNjk3OTE2NjddLAogICAgICAgICAgICAgICAgIFsxLjc2MjA5Njc3LCAyLjU2NzcwODMzXSwKICAgICAgICAgICAgICAgICBbMS44MzA2NDUxNiwgMS45NzM5NTgzM10sCiAgICAgICAgICAgICAgICAgWzEuODk1MTYxMjksIDIuNzUgICAgICBdLAogICAgICAgICAgICAgICAgIFsxLjk1MTYxMjkgLCAyLjg0ODk1ODMzXSwKICAgICAgICAgICAgICAgICBbMi4wMTIwOTY3NywgMi43NjA0MTY2N10sCiAgICAgICAgICAgICAgICAgWzEuOTkxOTM1NDgsIDEuOTk0NzkxNjddLAogICAgICAgICAgICAgICAgIFsyLjExMjkwMzIzLCAyLjYzMDIwODMzXSwKICAgICAgICAgICAgICAgICBbMi4yMDE2MTI5ICwgMi43MzQzNzUgIF0sCiAgICAgICAgICAgICAgICAgWzIuMjU0MDMyMjYsIDIuNjA0MTY2NjddLAogICAgICAgICAgICAgICAgIFsyLjE0OTE5MzU1LCAxLjk1MzEyNSAgXSwKICAgICAgICAgICAgICAgICBbMi4zMDY0NTE2MSwgMi4zNjk3OTE2N10sCiAgICAgICAgICAgICAgICAgWzIuMzkxMTI5MDMsIDIuMzY5NzkxNjddLAogICAgICAgICAgICAgICAgIFsyLjQxNTMyMjU4LCAyLjE4NzUgICAgXSwKICAgICAgICAgICAgICAgICBbMi4xNzMzODcxICwgMS43MDMxMjUgIF0sCiAgICAgICAgICAgICAgICAgWzIuMDc3ODIyNTgsIDEuMTY2NjY2NjddXSkKCiMgc3ViZGl2aWRlIHBvbHlnb24gdXNpbmcgMm5kIGRlZ3JlZSBCLVNwbGluZXMKbmV3X2hhbmQgPSBoYW5kLmNvcHkoKQpmb3IgXyBpbiByYW5nZSg1KToKICAgIG5ld19oYW5kID0gc3ViZGl2aWRlX3BvbHlnb24obmV3X2hhbmQsIGRlZ3JlZT0yLCBwcmVzZXJ2ZV9lbmRzPVRydWUpCgojIGFwcHJveGltYXRlIHN1YmRpdmlkZWQgcG9seWdvbiB3aXRoIERvdWdsYXMtUGV1Y2tlciBhbGdvcml0aG0KYXBwcl9oYW5kID0gYXBwcm94aW1hdGVfcG9seWdvbihuZXdfaGFuZCwgdG9sZXJhbmNlPTAuMDIpCgpwcmludCgiTnVtYmVyIG9mIGNvb3JkaW5hdGVzOiIsIGxlbihoYW5kKSwgbGVuKG5ld19oYW5kKSwgbGVuKGFwcHJfaGFuZCkpCgpmaWcsIChheDEsIGF4MikgPSBwbHQuc3VicGxvdHMobmNvbHM9MiwgZmlnc2l6ZT0oOSwgNCkpCgpheDEucGxvdChoYW5kWzosIDBdLCBoYW5kWzosIDFdKQpheDEucGxvdChuZXdfaGFuZFs6LCAwXSwgbmV3X2hhbmRbOiwgMV0pCmF4MS5wbG90KGFwcHJfaGFuZFs6LCAwXSwgYXBwcl9oYW5kWzosIDFdKQoKCiMgY3JlYXRlIHR3byBlbGxpcHNlcyBpbiBpbWFnZQppbWcgPSBucC56ZXJvcygoODAwLCA4MDApLCAnaW50MzInKQpyciwgY2MgPSBlbGxpcHNlKDI1MCwgMjUwLCAxODAsIDIzMCwgaW1nLnNoYXBlKQppbWdbcnIsIGNjXSA9IDEKcnIsIGNjID0gZWxsaXBzZSg2MDAsIDYwMCwgMTUwLCA5MCwgaW1nLnNoYXBlKQppbWdbcnIsIGNjXSA9IDEKCnBsdC5ncmF5KCkKYXgyLmltc2hvdyhpbWcpCgojIGFwcHJveGltYXRlIC8gc2ltcGxpZnkgY29vcmRpbmF0ZXMgb2YgdGhlIHR3byBlbGxpcHNlcwpmb3IgY29udG91ciBpbiBmaW5kX2NvbnRvdXJzKGltZywgMCk6CiAgICBjb29yZHMgPSBhcHByb3hpbWF0ZV9wb2x5Z29uKGNvbnRvdXIsIHRvbGVyYW5jZT0yLjUpCiAgICBheDIucGxvdChjb29yZHNbOiwgMV0sIGNvb3Jkc1s6LCAwXSwgJy1yJywgbGluZXdpZHRoPTIpCiAgICBjb29yZHMyID0gYXBwcm94aW1hdGVfcG9seWdvbihjb250b3VyLCB0b2xlcmFuY2U9MzkuNSkKICAgIGF4Mi5wbG90KGNvb3JkczJbOiwgMV0sIGNvb3JkczJbOiwgMF0sICctZycsIGxpbmV3aWR0aD0yKQogICAgcHJpbnQoIk51bWJlciBvZiBjb29yZGluYXRlczoiLCBsZW4oY29udG91ciksIGxlbihjb29yZHMpLCBsZW4oY29vcmRzMikpCgpheDIuYXhpcygoMCwgODAwLCAwLCA4MDApKQoKcGx0LnNob3coKQ==</div>
