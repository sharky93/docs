.. _example_plot_rank_mean.py:


============
Mean filters
============

This example compares the following mean filters of the rank filter package:

 * **local mean**: all pixels belonging to the structuring element to compute
   average gray level.
 * **percentile mean**: only use values between percentiles p0 and p1
   (here 10% and 90%).
 * **bilateral mean**: only use pixels of the structuring element having a gray
   level situated inside g-s0 and g+s1 (here g-500 and g+500)

Percentile and usual mean give here similar results, these filters smooth the
complete image (background and details). Bilateral mean exhibits a high
filtering rate for continuous area (i.e. background) while higher image
frequencies remain untouched.


.. image:: images/plot_rank_mean_1.png
    :align: center


.. raw:: html
    
    <p id="controls">
        <button type="button" class="btn btn-default btn-small" id="editcode">
            <i class="icon-edit"></i>
        </button>
    </p>

.. literalinclude:: plot_rank_mean.py
    :lines: 21-


.. raw:: html

    <p id="run_btn">
        <button type="button" class="btn btn-default btn-lg" id="runcode">
            <i class="icon-play"></i> Run
        </button>
        <button type="button" class="btn btn-default btn-lg" id="reload">
            <i class="icon-refresh"></i>
        </button>
        <img id="loading" src="../_static/ajax-loader.gif"/>
    </p>

.. raw:: html

    <p>
        <div class="alert alert-success" id="success-message"></div>
        <div class="alert alert-error" id="error-message"></div>
        <div class="all-output">
            <p class="stdout-group">
                <i class="icon-info-sign"></i> <u>STDOUT</u>
            </p>
            <pre id="stdout"></pre>
            <hr class="stdout-group">
            <p class="stderr-group">
                <i class="icon-remove-sign"></i> <u>STDERR</u>
            </p>
            <pre id="stderr"></pre>
            <hr class="stderr-group">
        </div>
    </p>


**Python source code:** :download:`download <plot_rank_mean.py>`
(generated using ``skimage`` |version|)



**IPython Notebook:** :download:`download <./notebook/plot_rank_mean.ipynb>`
(generated using ``skimage`` |version|)


.. raw:: html

    <div class="tobehidden">aW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKCmZyb20gc2tpbWFnZSBpbXBvcnQgZGF0YQpmcm9tIHNraW1hZ2UubW9ycGhvbG9neSBpbXBvcnQgZGlzawpmcm9tIHNraW1hZ2UuZmlsdGVyIGltcG9ydCByYW5rCgoKaW1hZ2UgPSAoZGF0YS5jb2lucygpKS5hc3R5cGUobnAudWludDE2KSAqIDE2CnNlbGVtID0gZGlzaygyMCkKCnBlcmNlbnRpbGVfcmVzdWx0ID0gcmFuay5tZWFuX3BlcmNlbnRpbGUoaW1hZ2UsIHNlbGVtPXNlbGVtLCBwMD0uMSwgcDE9LjkpCmJpbGF0ZXJhbF9yZXN1bHQgPSByYW5rLm1lYW5fYmlsYXRlcmFsKGltYWdlLCBzZWxlbT1zZWxlbSwgczA9NTAwLCBzMT01MDApCm5vcm1hbF9yZXN1bHQgPSByYW5rLm1lYW4oaW1hZ2UsIHNlbGVtPXNlbGVtKQoKCmZpZywgYXhlcyA9IHBsdC5zdWJwbG90cyhucm93cz0zLCBmaWdzaXplPSg4LCAxMCkpCmF4MCwgYXgxLCBheDIgPSBheGVzCgpheDAuaW1zaG93KG5wLmhzdGFjaygoaW1hZ2UsIHBlcmNlbnRpbGVfcmVzdWx0KSkpCmF4MC5zZXRfdGl0bGUoJ1BlcmNlbnRpbGUgbWVhbicpCmF4MC5heGlzKCdvZmYnKQoKYXgxLmltc2hvdyhucC5oc3RhY2soKGltYWdlLCBiaWxhdGVyYWxfcmVzdWx0KSkpCmF4MS5zZXRfdGl0bGUoJ0JpbGF0ZXJhbCBtZWFuJykKYXgxLmF4aXMoJ29mZicpCgpheDIuaW1zaG93KG5wLmhzdGFjaygoaW1hZ2UsIG5vcm1hbF9yZXN1bHQpKSkKYXgyLnNldF90aXRsZSgnTG9jYWwgbWVhbicpCmF4Mi5heGlzKCdvZmYnKQoKcGx0LnNob3coKQ==</div>
