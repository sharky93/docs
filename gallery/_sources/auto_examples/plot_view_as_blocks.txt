.. _example_plot_view_as_blocks.py:


============================
Block views on images/arrays
============================

This example illustrates the use of `view_as_blocks` from
`skimage.util.shape`.  Block views can be incredibly useful when one
wants to perform local operations on non-overlapping image patches.

We use `lena` from `skimage.data` and virtually 'slice' it into square
blocks.  Then, on each block, we either pool the mean, the max or the
median value of that block. The results are displayed altogether, along
with a spline interpolation of order 3 rescaling of the original `lena`
image.


.. image:: images/plot_view_as_blocks_1.png
    :align: center


.. raw:: html
    
    <p id="controls">
        <button type="button" class="btn btn-default btn-small editcode">
            <i class="icon-edit"></i>
        </button>
    </p>

.. literalinclude:: plot_view_as_blocks.py
    :lines: 17-


.. raw:: html

    <p class="run_btn">
        <button type="button" class="btn btn-default btn-lg runcode">
            <i class="icon-play"></i> Run
        </button>
        <img class="loading" src="../_static/ajax-loader.gif"/>
    </p>

.. raw:: html

    <p id="revert_btn">
        <button type="button" class="btn btn-default btn-lg" id="reload">
            <i class="icon-refresh"></i>
        </button>
    </p>

.. raw:: html

    <p>
        <div class="alert alert-success" id="success-message"></div>
        <div class="alert alert-error" id="error-message"></div>
        <div class="all-output">
            <p class="stdout-group">
                <i class="icon-info-sign"></i> <u>STDOUT</u>
            </p>
            <pre id="stdout"></pre>
            <hr class="stdout-group">
            <p class="stderr-group">
                <i class="icon-remove-sign"></i> <u>STDERR</u>
            </p>
            <pre id="stderr"></pre>
            <hr class="stderr-group">
        </div>
    </p>


**Python source code:** :download:`download <plot_view_as_blocks.py>`
(generated using ``skimage`` |version|)



**IPython Notebook:** :download:`download <./notebook/plot_view_as_blocks.ipynb>`
(generated using ``skimage`` |version|)


.. raw:: html

    <div class="tobehidden">aW1wb3J0IG51bXB5IGFzIG5wCmZyb20gc2NpcHkgaW1wb3J0IG5kaW1hZ2UgYXMgbmRpCmZyb20gbWF0cGxvdGxpYiBpbXBvcnQgcHlwbG90IGFzIHBsdAppbXBvcnQgbWF0cGxvdGxpYi5jbSBhcyBjbQoKZnJvbSBza2ltYWdlIGltcG9ydCBkYXRhCmZyb20gc2tpbWFnZSBpbXBvcnQgY29sb3IKZnJvbSBza2ltYWdlLnV0aWwuc2hhcGUgaW1wb3J0IHZpZXdfYXNfYmxvY2tzCgoKIyAtLSBnZXQgYGxlbmFgIGZyb20gc2tpbWFnZS5kYXRhIGluIGdyYXlzY2FsZQpsID0gY29sb3IucmdiMmdyYXkoZGF0YS5sZW5hKCkpCgojIC0tIHNpemUgb2YgYmxvY2tzCmJsb2NrX3NoYXBlID0gKDQsIDQpCgojIC0tIHNlZSBgbGVuYWAgYXMgYSBtYXRyaXggb2YgYmxvY2tzIChvZiBzaGFwZQojICAgIGBibG9ja19zaGFwZWApCnZpZXcgPSB2aWV3X2FzX2Jsb2NrcyhsLCBibG9ja19zaGFwZSkKCiMgLS0gY29sbGFwc2UgdGhlIGxhc3QgdHdvIGRpbWVuc2lvbnMgaW4gb25lCmZsYXR0ZW5fdmlldyA9IHZpZXcucmVzaGFwZSh2aWV3LnNoYXBlWzBdLCB2aWV3LnNoYXBlWzFdLCAtMSkKCiMgLS0gcmVzYW1wbGluZyBgbGVuYWAgYnkgdGFraW5nIGVpdGhlciB0aGUgYG1lYW5gLAojICAgIHRoZSBgbWF4YCBvciB0aGUgYG1lZGlhbmAgdmFsdWUgb2YgZWFjaCBibG9ja3MuCm1lYW5fdmlldyA9IG5wLm1lYW4oZmxhdHRlbl92aWV3LCBheGlzPTIpCm1heF92aWV3ID0gbnAubWF4KGZsYXR0ZW5fdmlldywgYXhpcz0yKQptZWRpYW5fdmlldyA9IG5wLm1lZGlhbihmbGF0dGVuX3ZpZXcsIGF4aXM9MikKCiMgLS0gZGlzcGxheSByZXNhbXBsZWQgaW1hZ2VzCmZpZywgYXhlcyA9IHBsdC5zdWJwbG90cygyLCAyLCBmaWdzaXplPSg4LCA4KSkKYXgwLCBheDEsIGF4MiwgYXgzID0gYXhlcy5yYXZlbCgpCgpheDAuc2V0X3RpdGxlKCJPcmlnaW5hbCByZXNjYWxlZCB3aXRoXG4gc3BsaW5lIGludGVycG9sYXRpb24gKG9yZGVyPTMpIikKbF9yZXNpemVkID0gbmRpLnpvb20obCwgMiwgb3JkZXI9MykKYXgwLmltc2hvdyhsX3Jlc2l6ZWQsIGNtYXA9Y20uR3JleXNfcikKCmF4MS5zZXRfdGl0bGUoIkJsb2NrIHZpZXcgd2l0aFxuIGxvY2FsIG1lYW4gcG9vbGluZyIpCmF4MS5pbXNob3cobWVhbl92aWV3LCBjbWFwPWNtLkdyZXlzX3IpCgpheDIuc2V0X3RpdGxlKCJCbG9jayB2aWV3IHdpdGhcbiBsb2NhbCBtYXggcG9vbGluZyIpCmF4Mi5pbXNob3cobWF4X3ZpZXcsIGNtYXA9Y20uR3JleXNfcikKCmF4My5zZXRfdGl0bGUoIkJsb2NrIHZpZXcgd2l0aFxuIGxvY2FsIG1lZGlhbiBwb29saW5nIikKYXgzLmltc2hvdyhtZWRpYW5fdmlldywgY21hcD1jbS5HcmV5c19yKQoKZmlnLnN1YnBsb3RzX2FkanVzdChoc3BhY2U9MC40LCB3c3BhY2U9MC40KQpwbHQuc2hvdygp</div>
