.. _example_plot_label.py:


===================
Label image regions
===================

This example shows how to segment an image with image labelling. The following
steps are applied:

1. Thresholding with automatic Otsu method
2. Close small holes with binary closing
3. Remove artifacts touching image border
4. Measure image regions to filter small objects


.. image:: images/plot_label_1.png
    :align: center


.. raw:: html
    
    <p id="controls">
        <button type="button" class="btn btn-default btn-small editcode">
            <i class="icon-edit"></i>
        </button>
    </p>

.. literalinclude:: plot_label.py
    :lines: 15-


.. raw:: html

    <p class="run_btn">
        <button type="button" class="btn btn-default btn-lg runcode">
            <i class="icon-play"></i> Run
        </button>
        <img class="loading" src="../_static/ajax-loader.gif"/>
    </p>

.. raw:: html

    <p id="revert_btn">
        <button type="button" class="btn btn-default btn-lg" id="reload">
            <i class="icon-refresh"></i>
        </button>
    </p>

.. raw:: html

    <p>
        <div class="alert alert-success" id="success-message"></div>
        <div class="alert alert-error" id="error-message"></div>
        <div class="all-output">
            <p class="stdout-group">
                <i class="icon-info-sign"></i> <u>STDOUT</u>
            </p>
            <pre id="stdout"></pre>
            <hr class="stdout-group">
            <p class="stderr-group">
                <i class="icon-remove-sign"></i> <u>STDERR</u>
            </p>
            <pre id="stderr"></pre>
            <hr class="stderr-group">
        </div>
    </p>


**Python source code:** :download:`download <plot_label.py>`
(generated using ``skimage`` |version|)



**IPython Notebook:** :download:`download <./notebook/plot_label.ipynb>`
(generated using ``skimage`` |version|)


.. raw:: html

    <div class="tobehidden">aW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IG1hdHBsb3RsaWIucGF0Y2hlcyBhcyBtcGF0Y2hlcwoKZnJvbSBza2ltYWdlIGltcG9ydCBkYXRhCmZyb20gc2tpbWFnZS5maWx0ZXIgaW1wb3J0IHRocmVzaG9sZF9vdHN1CmZyb20gc2tpbWFnZS5zZWdtZW50YXRpb24gaW1wb3J0IGNsZWFyX2JvcmRlcgpmcm9tIHNraW1hZ2UubW9ycGhvbG9neSBpbXBvcnQgbGFiZWwsIGNsb3NpbmcsIHNxdWFyZQpmcm9tIHNraW1hZ2UubWVhc3VyZSBpbXBvcnQgcmVnaW9ucHJvcHMKZnJvbSBza2ltYWdlLmNvbG9yIGltcG9ydCBsYWJlbDJyZ2IKCgppbWFnZSA9IGRhdGEuY29pbnMoKVs1MDotNTAsIDUwOi01MF0KCiMgYXBwbHkgdGhyZXNob2xkCnRocmVzaCA9IHRocmVzaG9sZF9vdHN1KGltYWdlKQpidyA9IGNsb3NpbmcoaW1hZ2UgPiB0aHJlc2gsIHNxdWFyZSgzKSkKCiMgcmVtb3ZlIGFydGlmYWN0cyBjb25uZWN0ZWQgdG8gaW1hZ2UgYm9yZGVyCmNsZWFyZWQgPSBidy5jb3B5KCkKY2xlYXJfYm9yZGVyKGNsZWFyZWQpCgojIGxhYmVsIGltYWdlIHJlZ2lvbnMKbGFiZWxfaW1hZ2UgPSBsYWJlbChjbGVhcmVkKQpib3JkZXJzID0gbnAubG9naWNhbF94b3IoYncsIGNsZWFyZWQpCmxhYmVsX2ltYWdlW2JvcmRlcnNdID0gLTEKaW1hZ2VfbGFiZWxfb3ZlcmxheSA9IGxhYmVsMnJnYihsYWJlbF9pbWFnZSwgaW1hZ2U9aW1hZ2UpCgpmaWcsIGF4ID0gcGx0LnN1YnBsb3RzKG5jb2xzPTEsIG5yb3dzPTEsIGZpZ3NpemU9KDYsIDYpKQpheC5pbXNob3coaW1hZ2VfbGFiZWxfb3ZlcmxheSkKCmZvciByZWdpb24gaW4gcmVnaW9ucHJvcHMobGFiZWxfaW1hZ2UpOgoKICAgICMgc2tpcCBzbWFsbCBpbWFnZXMKICAgIGlmIHJlZ2lvbi5hcmVhIDwgMTAwOgogICAgICAgIGNvbnRpbnVlCgogICAgIyBkcmF3IHJlY3RhbmdsZSBhcm91bmQgc2VnbWVudGVkIGNvaW5zCiAgICBtaW5yLCBtaW5jLCBtYXhyLCBtYXhjID0gcmVnaW9uLmJib3gKICAgIHJlY3QgPSBtcGF0Y2hlcy5SZWN0YW5nbGUoKG1pbmMsIG1pbnIpLCBtYXhjIC0gbWluYywgbWF4ciAtIG1pbnIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw9RmFsc2UsIGVkZ2Vjb2xvcj0ncmVkJywgbGluZXdpZHRoPTIpCiAgICBheC5hZGRfcGF0Y2gocmVjdCkKCnBsdC5zaG93KCk=</div>
